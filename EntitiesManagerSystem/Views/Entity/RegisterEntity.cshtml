@{
ViewBag.Title = "register-entity";
Layout = null;
}

@using System.Web.Mvc.Html
@model EntitiesManagerSystem.Models.Entity

<!DOCTYPE html>
<html>

<head>
    <title>Registro</title>

    <meta charset="UTF-8">
    <meta content="ie=edge" http-equiv="x-ua-compatible">
    <meta content="template language" name="keywords">
    <meta content="Tamerlan Soziev" name="author">
    <meta content="Admin dashboard html template" name="description">
    <meta content="width=device-width, initial-scale=1" name="viewport">
    <link href="~/Template/img/ong.png" rel="shortcut icon">
    <link href="apple-touch-icon.png" rel="apple-touch-icon">
    @Styles.Render("~/Template/bower_components/select2/dist/css/select2.min.css")
    @Styles.Render("~/Template/bower_components/bootstrap-daterangepicker/daterangepicker.css")
    @Styles.Render("~/Template/bower_components/dropzone/dist/dropzone.css")
    @Styles.Render("~/Template/bower_components/datatables.net-bs/css/dataTables.bootstrap.min.css")
    @Styles.Render("~/Template/bower_components/fullcalendar/dist/fullcalendar.min.css")
    @Styles.Render("~/Template/bower_components/perfect-scrollbar/css/perfect-scrollbar.min.css")
    @Styles.Render("~/Template/bower_components/slick-carousel/slick/slick.css")
    @Styles.Render("~/Template/css/main.css?version=4.4.1")
    @Styles.Render("~/Content/input_file.css")
    @Styles.Render("~/Content/main.css")


</head>

<body>
    <div class="all-wrapper menu-side with-pattern">
        <div class="row">
            <div class="auth-box-w wider col-10 register-mod">
                <div class="logo-w">
                    <img alt="" src="~/Template/img/ong.png">
                </div>
                <h4 class="auth-header">Nova Entidade</h4>
                @using (Html.BeginForm("SaveEntity", "Entity", FormMethod.Post))
                {
                <legend>
                    <span>Dados Cadastrais</span>
                </legend>
                <div class="row">
                    <div class="form-group col-sm-6">
                        <label>@Html.LabelFor(m => m.EntityName)</label>
                        @Html.TextBoxFor(m => m.EntityName, new {@class = "form-control"})
                        @Html.ValidationMessageFor(m => m.EntityName, "", new {@class = "help-block form-text with-errors form-control-feedback"})
                    </div>
                    <div class="form-group col-sm-6">
                        <label> @Html.LabelFor(m => m.Email)</label>
                        @Html.TextBoxFor(m => m.Email, new {@class = "form-control"})
                        @Html.ValidationMessageFor(m => m.Email, "", new {@class = "help-block form-text with-errors form-control-feedback"})
                    </div>

                </div>
                <div class="row">
                    <div class="form-group col-sm-6">
                        <label> @Html.LabelFor(m => m.EntityResponsableName)</label>
                        @Html.TextBoxFor(m => m.EntityResponsableName, new {@class = "form-control"})
                        @Html.ValidationMessageFor(m => m.EntityResponsableName, "", new {@class = "help-block form-text with-errors form-control-feedback"})
                    </div>

                    <div class="form-group col-sm-6">
                        <div class="form-group">
                            <label> @Html.LabelFor(m => m.EntityPhone)</label>
                            @Html.TextBoxFor(m => m.EntityPhone, new {@class = "form-control"})
                            @Html.ValidationMessageFor(m => m.EntityPhone, "", new {@class = "help-block form-text with-errors form-control-feedback"})
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label> @Html.LabelFor(m => m.Password)</label>
                            @Html.TextBoxFor(m => m.Password, new {@class = "form-control", @type="password"})
                            @Html.ValidationMessageFor(m => m.Password, "", new {@class = "help-block form-text with-errors form-control-feedback"})
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label> @Html.LabelFor(m => m.ConfirmPassword)</label>
                            @Html.TextBoxFor(m => m.ConfirmPassword, new {@class = "form-control",
                            @type="password"})
                            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new {@class = "help-block form-text with-errors form-control-feedback"})
                        </div>
                    </div>
                </div>
                <legend>
                    <span>Endere√ßo</span>
                </legend>
                <div class="row">
                    <div class="form-group col-sm-2">
                        <label>@Html.LabelFor(m => m.EntityAddress.CEP)</label>
                        @Html.TextBoxFor(m => m.EntityAddress.CEP, new {@id = "cep", @class = "mask_cep form-control"})
                        @Html.ValidationMessageFor(m => m.EntityAddress.CEP, "", new {@class = "help-block form-text with-errors form-control-feedback"})
                    </div>
                    <div class="form-group col-sm-8">
                        <label>@Html.LabelFor(m => m.EntityAddress.Avenue)</label>
                        @Html.TextBoxFor(m => m.EntityAddress.Avenue, new {name = "address", @class = "autocomplete-address form-control"})
                        @Html.ValidationMessageFor(m => m.EntityAddress.Avenue, "", new {@class = "help-block form-text with-errors form-control-feedback"})
                    </div>
                    <div class="form-group col-sm-2">
                        <label>@Html.LabelFor(m => m.EntityAddress.Number)</label>
                        @Html.TextBoxFor(m => m.EntityAddress.Number, new {name = "street_number", @class = "autocomplete-address form-control"})
                        @Html.ValidationMessageFor(m => m.EntityAddress.Number, "", new {@class = "help-block form-text with-errors form-control-feedback"})
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-sm-5">
                        <label>@Html.LabelFor(m => m.EntityAddress.Neighborhood)</label>
                        @Html.TextBoxFor(m => m.EntityAddress.Neighborhood, new {name = "neighborhood", @class =
                        "autocomplete-neighborhood form-control"})
                        @Html.ValidationMessageFor(m => m.EntityAddress.Neighborhood, "", new {@class = "help-block form-text with-errors form-control-feedback"})
                    </div>
                    <div class="col-sm-5">
                        <div class="form-group">
                            <label>@Html.LabelFor(m => m.EntityAddress.City)</label>
                            @Html.TextBoxFor(m => m.EntityAddress.City, new {name = "city", @class = "autocomplete-city form-control"})
                            @Html.ValidationMessageFor(m => m.EntityAddress.City, "", new {@class = "help-block form-text with-errors form-control-feedback"})
                        </div>
                    </div>
                    <div class="col-sm-2">
                        <div class="form-group">
                            <label>@Html.LabelFor(m => m.EntityAddress.State)</label>
                            @Html.DropDownListFor(model => model.EntityAddress.State, new SelectList(
                            new List<Object>
                                {
                                new {value = "AC", text = "AC"},
                                new {value = "AL", text = "AL"},
                                new {value = "AM", text = "AM"},
                                new {value = "AP", text = "AP"},
                                new {value = "BA", text = "BA"},
                                new {value = "CE", text = "CE"},
                                new {value = "DF", text = "DF"},
                                new {value = "ES", text = "ES"},
                                new {value = "GO", text = "GO"},
                                new {value = "MA", text = "MA"},
                                new {value = "MG", text = "MG"},
                                new {value = "MS", text = "MS"},
                                new {value = "MT", text = "MT"},
                                new {value = "PA", text = "PA"},
                                new {value = "PB", text = "PB"},
                                new {value = "PE", text = "PE"},
                                new {value = "PI", text = "PI"},
                                new {value = "PR", text = "PR"},
                                new {value = "RJ", text = "RJ"},
                                new {value = "RN", text = "RN"},
                                new {value = "RO", text = "RO"},
                                new {value = "RR", text = "RR"},
                                new {value = "RS", text = "RS"},
                                new {value = "SC", text = "SC"},
                                new {value = "SE", text = "SE"},
                                new {value = "SP", text = "SP"},
                                new {value = "TO", text = "TO"}
                                },
                                "value",
                                "text",
                                "RS"), new {@class = "autocomplete-state form-control"})
                                @Html.ValidationMessageFor(m => m.EntityAddress.State, "", new {@class = "help-block form-text with-errors form-control-feedback"})
                        </div>
                    </div>

                </div>
             <legend>
                    <span>Atua√ß√£o</span>
                </legend>
                    <div class="form-group">
                        <label for=""> Afinidades</label>
                        <select id="multiple_select_affinity" class="form-control select2" multiple="true">
                            @foreach (var affinity in ViewBag.affinities)
                            {
                                <option value="@affinity.AffinityId">@affinity.Name</option>    
                            }
                        </select>
                    </div>
                <fieldset class="form-group">
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>@Html.LabelFor(m => m.EntityInitials)</label>
                                @Html.TextBoxFor(m => m.EntityInitials, new {@class = "form-control"})
                                @Html.ValidationMessageFor(m => m.EntityInitials, "", new {@class = "help-block form-text with-errors form-control-feedback"})
                            </div>
                        </div>
                        

                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>@Html.LabelFor(m => m.EntitySocialNetwork)</label>
                                @Html.TextBoxFor(m => m.EntitySocialNetwork, new {@class = "form-control"})
                                @Html.ValidationMessageFor(m => m.EntitySocialNetwork, "", new {@class = "help-block form-text with-errors form-control-feedback"})
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>@Html.LabelFor(m => m.EntityWebSite)</label>
                                @Html.TextBoxFor(m => m.EntityWebSite, new {@class = "form-control"})
                                @Html.ValidationMessageFor(m => m.EntityWebSite, "", new {@class = "help-block form-text with-errors form-control-feedback"})
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="form-group">
                                <label>@Html.LabelFor(m => m.EntityDescription)</label>
                                @Html.TextAreaFor(m => m.EntityDescription, new {@class = "form-control", rows = "3"})
                            </div>
                        </div>
                    </div>
                </fieldset>
                    @Html.TextBoxFor(m => m.Affinities, new {@id="affinities_array", @type="hidden", @class = "form-control"})
                <div class="buttons-w">
                    <button class="btn btn-primary">Cadastrar</button>
                </div>
                <a class="register-link" href="@Url.Action("Login", "Login" )">J√° sou cadastrado</a>
                }
            </div>
        </div>
    </div>
    @Scripts.Render("~/Template/bower_components/jquery/dist/jquery.min.js")
    @Scripts.Render("~/Template/bower_components/select2/dist/js/select2.full.min.js")

    @Scripts.Render("~/Scripts/jquery.autocomplete-address.min.js")
    @Scripts.Render("~/Scripts/jquery.mask.min.js")
    @Scripts.Render("~/Scripts/input_file.js")
    @Scripts.Render("~/Scripts/main.js")
</body>
<script>
 
 $(document).ready(function() {
     
   //Quando o form retorna com algum erro, este m√©todo verifica se existe valor no input affinity, 
   //e seleciona os valores correspondentes no select2 
   if($('#affinities_array').val()){
       let affinities = JSON.parse($('#affinities_array').val());
       let values_select = [];
       affinities.forEach(function(a) {
           values_select.push(a.value)
       });
       $("#multiple_select_affinity").val(values_select).change()
   }
 })
 
 //Sempre que ocorre um evento no select2, selecionando ou deselecionando uma afinidade,
 //este m√©todo captura o evento e salva uma string no input affinity com os valores do select2
 $("#multiple_select_affinity").on("select2:select select2:unselect", function (e) {
     let values_selected = $(this).select2('data');
     let values_input = [];
     values_selected.forEach(function(value) {
         values_input.push({
             'value':value.id,
             'text':value.text
         })
     });
     $('#affinities_array').val(JSON.stringify(values_input))
 })
 
 </script>

</html>